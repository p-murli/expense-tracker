{"version":3,"sources":["components/DarkMode.js","components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["DarkMode","body","document","clickedClass","theme","localStorage","getItem","classList","add","className","id","onClick","e","replace","target","remove","setItem","switchTheme","Header","appReducer","state","action","type","transactions","filter","transaction","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","Transaction","sign","text","Math","abs","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","preventDefault","newTransaction","floor","random","htmlFor","onChange","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9a66bed4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst DarkMode = () => {\r\n    \r\n    const body = document.body\r\n\r\n    let clickedClass = \"clicked\"\r\n    \r\n    let theme = localStorage.getItem('theme')\r\n\r\n    if(theme == null){\r\n        body.classList.add(\"light\")\r\n    }\r\n    else{\r\n        body.classList.add(theme)\r\n    }\r\n\r\n    const switchTheme = (e) => {\r\n        \r\n        if(theme === 'dark'){\r\n            body.classList.replace('dark', 'light')\r\n            e.target.classList.remove(clickedClass)\r\n            localStorage.setItem(\"theme\", 'light')\r\n            theme = 'light'\r\n        }\r\n        else{\r\n            body.classList.replace('light', 'dark')\r\n            e.target.classList.add(clickedClass)\r\n            localStorage.setItem(\"theme\", 'dark')\r\n            theme = 'dark'\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <button className={theme === 'dark' ? clickedClass : \"dbtn\"} id=\"darkMode\" onClick={e => switchTheme(e)}>\r\n                Toggle Dark Mode    \r\n            </button>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DarkMode\r\n","import React from 'react'\r\nimport DarkMode from './DarkMode'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className='rowLine'>\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n        <DarkMode />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","const appReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state, \r\n                transactions: state.transactions.filter((transaction) => transaction.id !== action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer","import React, {createContext, useReducer} from 'react'\r\nimport AppReducer from './AppReducer';\r\n\r\n//Initial state\r\n\r\nconst initialState = {\r\n    transactions: []\r\n}\r\n\r\n//Create Context\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Provider component\r\n\r\nexport const GlobalProvider = (({children}) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    //Actions\r\n\r\n    function deleteTransaction(id){\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id\r\n        });\r\n    }\r\n\r\n    function addTransaction(transaction){\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload: transaction\r\n        });\r\n    }\r\n\r\n\r\n    return (<GlobalContext.Provider value={{transactions: state.transactions, deleteTransaction, addTransaction}}>\r\n        {children}\r\n    </GlobalContext.Provider> )\r\n})","import React, {useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\n\r\nconst Balance = () => {\r\n\r\n    const { transactions } = useContext(GlobalContext)\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n    return (\r\n        <div>\r\n            <h4>Balance</h4>\r\n            <h1> Rs. {total}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Balance\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\n\r\nconst IncomeExpenses = () => {\r\n\r\n    const { transactions } = useContext(GlobalContext)\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const income = amounts\r\n        .filter(item => item > 0)\r\n        .reduce((acc, item) => (acc += item), 0)\r\n        .toFixed(2);\r\n\r\n    const expense = (amounts\r\n        .filter(item => item < 0)\r\n        .reduce((acc, item) => (acc += item), 0) *\r\n        -1\r\n    ).toFixed(2);\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className=\"money plus\">+Rs. {income}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p className=\"money minus\">-Rs. {expense}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IncomeExpenses\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\n\r\nconst Transaction = ({ transaction }) => {\r\n\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n    const sign = transaction.amount > 0 ? '+' : '-';\r\n\r\n    return (\r\n        <li className={transaction.amount > 0 ? \"plus\" : \"minus\"}>\r\n            {transaction.text} <span> {sign}Rs. {Math.abs(transaction.amount)} </span>\r\n            <button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Transaction\r\n","import React,{useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport Transaction from './Transaction'\r\n\r\nconst TransactionList = () => {\r\n    \r\n    const {transactions} = useContext(GlobalContext)\r\n\r\n    // console.log(context)\r\n    \r\n    return (\r\n\r\n        <div>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction}/>))} \r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TransactionList\r\n","import React, {useState, useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\n\r\nconst AddTransaction = () => {\r\n    \r\n    const {addTransaction} = useContext(GlobalContext)\r\n    \r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(text===\"\" || amount===0){\r\n            return\r\n        }\r\n\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text: text,\r\n            amount: +amount\r\n        }\r\n\r\n        addTransaction(newTransaction);\r\n\r\n        setText('')\r\n        setAmount(0)\r\n    } \r\n    \r\n    return (\r\n        <div>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Description</label>\r\n                    <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\"\r\n                    >Amount <br />\r\n                        (negative - expense, positive - income)</label\r\n                    >\r\n                    <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTransaction\r\n","import Header from './components/Header';\nimport Balance from './components/Balance';\nimport IncomeExpenses from './components/IncomeExpenses';\nimport TransactionList from './components/TransactionList';\nimport AddTransaction from './components/AddTransaction';\nimport './App.css';\nimport { GlobalProvider } from './context/GlobalState'\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n\n        <TransactionList />\n\n        <AddTransaction />\n      </div>\n\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}